name: Docker Image from PR

on:
  pull_request:
    branches:
      - master

env:
  GCS_BUCKET: images.metal-pod.io

jobs:
  integration:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go 1.17
      uses: actions/setup-go@v2
      with:
        go-version: '1.17.x'

    - name: run integration tests
      run: |
        sudo apt install -y --no-install-recommends nftables iproute2 kmod
        sudo modprobe dummy
        sudo ip link add vrf42 type dummy
        sudo ip link add vlan42 type dummy
        export KUBEBUILDER_ASSETS=/usr/local/bin
        sudo "PATH=$PATH;KUBEBUILDER_ASSETS=/usr/local/bin" --preserve-env make test-all clean

  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2

    - uses: google-github-actions/setup-gcloud@v0
      with:
        service_account_email: ${{ secrets.GCP_SA_EMAIL }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Go 1.17
      uses: actions/setup-go@v2
      with:
        go-version: '1.17.x'

    - name: Make tag
      run: echo "TAG_NAME=$(echo $GITHUB_REF | awk -F / '{print $3}')-${GITHUB_HEAD_REF##*/}" >> $GITHUB_ENV

    - name: Figure out if running fork PR
      id: fork
      run: '["${{ secrets.DOCKER_REGISTRY_TOKEN }}" == ""] && echo "::set-output name=is_fork_pr::true" || echo "::set-output name=is_fork_pr::false"'

    - name: Docker Login
      uses: docker/login-action@v1
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_REGISTRY_USER }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
      if: steps.fork.outputs.is_fork_pr == 'false'

    - name: Build
      run: |
        make fetch-template

    - name: Lint
      uses: golangci/golangci-lint-action@v2
      with:
        args: -p bugs -p unused --timeout=3m

    - name: Build
      run: |
        make

    - name: Build Docker Image
      run: |
        export GITHUB_TAG_NAME=${GITHUB_HEAD_REF##*/}
        make docker-build

    - name: Push
      run: |
        export GITHUB_TAG_NAME=${GITHUB_HEAD_REF##*/}
        make docker-push
      if: steps.fork.outputs.is_fork_pr == 'false'

    - name: Prepare upload
      run: |
        mkdir -p firewall-controller/pull-requests/${TAG_NAME}
        sudo chown -R $(id -u):$(id -g) bin
        mv bin/* firewall-controller/pull-requests/${TAG_NAME}
      if: steps.fork.outputs.is_fork_pr == 'false'

    - name: Upload image tarballs to GCS
      run: gsutil -m cp -r -p firewall-controller gs://$GCS_BUCKET
      if: steps.fork.outputs.is_fork_pr == 'false'
